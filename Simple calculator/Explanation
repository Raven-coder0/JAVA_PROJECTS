Explanation of the Code:
This java program is a Simple Calculator that allows users to perform addition, subtraction, multiplication, and division. The program runs in a loop, allowing the user to perform multiple calculations until they decide to exit.



 Step-by-Step Explanation:

 1. Importing Scanner Class

import java.util.Scanner;

- The Scanner class is imported from java.util to read input from the user.



 2. Creating the Class

class simplecalculator {

- A class named simplecalculator is created.
- It follows java naming conventions, but the class name should start with an uppercase letter (e.g., SimpleCalculator).



 3. Main Method

public static void main(String[] args) {

- The main method is the entry point of the program.
- Inside the main method, we initialize the Scanner object.



 4. Creating Scanner Object

Scanner userinput = new Scanner(System.in);

- Scanner object userinput is created to take input from the user.



 5. Infinite While Loop

while(true) {

- This loop runs indefinitely, allowing the user to perform multiple calculations.
- The loop will only exit when the user selects 0.



 6. Displaying Calculator Header

System.out.println(" \n                 -");
System.out.println("                | Simple Calculator |");
System.out.println("                 -");

- The header is displayed to make the calculator look structured and user-friendly.



 7. Displaying the List of Operations

System.out.println("\nselect your choice of operation from the below options (1 - 4)numbers only:");
System.out.println("-");
System.out.println("1.)Addition\n2.)substraction\n3.)multplication\n4.)division");
System.out.println("enter your choice from (1- 4) : ");

- The available mathematical operations are displayed for the user.



 8. Checking for Invalid Input (Non-Numeric Values)

if(!userinput.hasNextInt()) {
    System.out.println(" Invalid Input : you cannot select non - numeric values ");
    System.out.println("\nselect your choice of operation from the options (1 - 4)numbers only:");
    userinput.next(); // Clear the invalid input
    continue; // Restart the loop again.
}

- If the user enters a non-numeric value (like a letter or symbol), an error message is displayed.
- The invalid input is cleared using userinput.next(), and the loop restarts.



 9. Taking User Input for Choice

int choice = userinput.nextInt();

- The program reads the user's choice for the operation.



 10. Exit Condition

if(choice == 0) {
    System.out.println(" Thank you for using simple calculator. !!! GOODBYE !!!");
    break;  // Exits the loop
}

- If the user enters 0, the program exits.



 11. Handling Invalid Choice

if (choice > 4) {
    System.out.println("Invalid choice! Please select a valid option.");
    continue; // Restart the loop again.
}

- If the user enters a number greater than 4, an error message is displayed.



 12. Reading the First Number

System.out.println("Enter your first number:");
if (!userinput.hasNextDouble()) { 
    System.out.println("Invalid input! Please enter a valid number.");
    userinput.next(); // Clear invalid input
    continue; // Restart the loop
}
double num1 = userinput.nextDouble();

- The program asks the user to enter the first number.
- If the user enters a non-numeric value, an error message is shown, and the loop restarts.



 13. Reading the Second Number

System.out.println("Enter your Second number:");
if (!userinput.hasNextDouble()) { 
    System.out.println("Invalid input! Please enter a valid number.");
    userinput.next(); // Clear invalid input
    continue; // Restart the loop
}
double num2 = userinput.nextDouble();

- The program asks the user to enter the second number.
- Again, input validation ensures that only numeric values are accepted.



 14. Performing the Selected Operation

double result;

- The result variable is declared to store the output of the calculation.

 Addition

if(choice==1){ // ADDITION
    result = num1+num2;
    System.out.println("The addition of "+num1+" + "+num2+" = "+result);
}

- If the user selects 1, the program adds num1 and num2.



 Subtraction

else if(choice==2){ // SUBTRACTION
    result = num1-num2;
    System.out.println("The Subtraction of "+num1+" - "+num2+" = "+result);
}

- If the user selects 2, the program subtracts num2 from num1.



 Multiplication

else if(choice==3){ // MULTIPLICATION
    result = num1 * num2;
    System.out.println("The Multiplication of "+num1+"  "+num2+" = "+result);
}

- If the user selects 3, the program multiplies num1 and num2.



 Division

else if(choice==4){ // DIVISION
    if(num1==0 || num2==0){    
        System.out.println("Error : Division by zero is not allowed.");
    }
    else {
        result = num1/num2;
        System.out.println("The Division of "+num1+" / "+num2+" = "+result);
    }
}

- If the user selects 4, the program divides num1 by num2.
- If num2 == 0, an error message prevents division by zero.



 15. Closing the Scanner

userinput.close();

- The Scanner is closed to prevent memory leaks.



 Summary of Features
âœ… Handles multiple calculations using a while loop.  
âœ… Prevents crashes from invalid input (letters, symbols, etc.).  
âœ… Allows the user to exit the calculator with 0.  
âœ… Prevents division by zero.  
âœ… Handles incorrect choices gracefully.  



 Example Run:

                 -
                | Simple Calculator |
                 -

select your choice of operation from the below options (1 - 4)numbers only:
-
1.)Addition
2.)Substraction
3.)Multiplication
4.)Division
enter your choice from (1- 4) : 
a
Invalid Input : you cannot select non - numeric values 

select your choice of operation from the options (1 - 4)numbers only:

enter your choice from (1- 4) : 
2
Enter your first number:
5
Enter your second number:
3
The Subtraction of 5.0 - 3.0 = 2.0




 Conclusion
Your Simple Calculator program is efficient, user-friendly, and error-proof. Let me know if you need further modifications! ðŸš€ðŸ˜Š
